MESSAGE(STATUS "Looking for pcap")

IF (WIN32)
	FIND_PATH(PCAP_INCLUDE_DIR
		NAMES "pcap.h"
		PATHS "${CMAKE_SOURCE_DIR}/WinPcap/include")

	FIND_LIBRARY(PCAP_LIB1
		NAMES "Packet"
		PATHS "${CMAKE_SOURCE_DIR}/WinPcap/lib")

	FIND_LIBRARY(PCAP_LIB2
		NAMES "wpcap"
		PATHS "${CMAKE_SOURCE_DIR}/WinPcap/lib")

	SET(PCAP_LIBRARY "${PCAP_LIB1}" "${PCAP_LIB2}")
ELSE()
	FIND_PATH(PCAP_INCLUDE_DIR
		NAMES "pcap.h"
		PATHS "/usr/include/pcap" "/usr/local/include/pcap")

	FIND_LIBRARY(PCAP_LIBRARY
		NAMES "pcap"
		PATHS "/usr/lib" "/lib" "/usr/local/lib")
ENDIF()


INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(PCAP DEFAULT_MSG
	PCAP_LIBRARY PCAP_INCLUDE_DIR)

MARK_AS_ADVANCED(PCAP_INCLUDE_DIR PCAP_LIBRARY)
SET(PCAP_LIBRARIES "${PCAP_LIBRARY}")
SET(PCAP_INCLUDE_DIRS "${PCAP_INCLUDE_DIR}")
