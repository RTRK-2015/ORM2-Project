CMAKE_MINIMUM_REQUIRED(VERSION 3.0)
PROJECT("ORM2-Project")


# Common
SET(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH}" "${CMAKE_SOURCE_DIR}/CMakeModules")
FIND_PACKAGE(PCAP REQUIRED)

SET(COMMON_DIR "${CMAKE_SOURCE_DIR}/common")
SET(COMMON_SRC_DIR "${COMMON_DIR}/src")
SET(COMMON_INC_DIR "${COMMON_DIR}/include")
FILE(GLOB COMMON_SRC_FILES "${COMMON_SRC_DIR}/*.cpp")


# Server
SET(SERVER_DIR "${CMAKE_SOURCE_DIR}/server")
SET(SERVER_SRC_DIR "${SERVER_DIR}/src")
SET(SERVER_INC_DIR "${SERVER_DIR}/include")
FILE(GLOB SERVER_SRC_FILES "${SERVER_SRC_DIR}/*.cpp")

ADD_EXECUTABLE(server "${SERVER_SRC_FILES}" "${COMMON_SRC_FILES}")
TARGET_INCLUDE_DIRECTORIES(server PUBLIC "${SERVER_INC_DIR}" "${PCAP_INC_DIR}" "${COMMON_INC_DIR}")
TARGET_LINK_LIBRARIES(server PUBLIC "${PCAP_LIB}")


# Client
SET(CLIENT_DIR "${CMAKE_SOURCE_DIR}/client")
SET(CLIENT_SRC_DIR "${CLIENT_DIR}/src")
SET(CLIENT_INC_DIR "${CLIENT_DIR}/include")
FILE(GLOB CLIENT_SRC_FILES "${CLIENT_SRC_DIR}/*.cpp")

ADD_EXECUTABLE(client "${CLIENT_SRC_FILES}" "${COMMON_SRC_FILES}")
TARGET_INCLUDE_DIRECTORIES(client PUBLIC "${CLIENT_INC_DIR}" "${PCAP_INC_DIR}" "${COMMON_INC_DIR}")
TARGET_LINK_LIBRARIES(client PUBLIC "${PCAP_LIB}")


# C++11 features
TARGET_COMPILE_FEATURES(server PUBLIC cxx_nullptr)
TARGET_COMPILE_FEATURES(client PUBLIC cxx_nullptr)

TARGET_COMPILE_FEATURES(server PUBLIC cxx_auto_type)
TARGET_COMPILE_FEATURES(client PUBLIC cxx_auto_type)


# Warnings
IF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread -Wall -Wextra")
ELSEIF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4")
ENDIF()
