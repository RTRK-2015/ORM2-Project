CMAKE_MINIMUM_REQUIRED(VERSION 3.0)
PROJECT("ORM2-Project")


# Setup
SET(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH}" "${CMAKE_SOURCE_DIR}/CMakeModules")
FIND_PACKAGE(PCAP REQUIRED)
FIND_PACKAGE(Threads)

IF (NOT "${CMAKE_BUILD_TYPE}")
  MESSAGE(WARNING "No build type selected. Defaulting to Debug. Use -DCMAKE_BUILD_TYPE={Debug,Release} to select a build type")
  SET(CMAKE_BUILD_TYPE "Debug")
ENDIF ()

SET(CMAKE_DISABLE_IN_SOURCE_BUILD ON)


# Common
SET(COMMON_DIR "${CMAKE_SOURCE_DIR}/common")
SET(COMMON_SRC_DIR "${COMMON_DIR}/src")
SET(COMMON_INC_DIR "${COMMON_DIR}/include")
FILE(GLOB_RECURSE COMMON_SRC_FILES "${COMMON_SRC_DIR}/*.cpp")

ADD_LIBRARY(common STATIC "${COMMON_SRC_FILES}")
TARGET_INCLUDE_DIRECTORIES(common PUBLIC
  "${COMMON_INC_DIR}" "${PCAP_INCLUDE_DIRS}")
TARGET_LINK_LIBRARIES(common PUBLIC
  "${CMAKE_THREAD_LIBS_INIT}" "${PCAP_LIBRARIES}")


# Server
SET(SERVER_DIR "${CMAKE_SOURCE_DIR}/server")
SET(SERVER_SRC_DIR "${SERVER_DIR}/src")
SET(SERVER_INC_DIR "${SERVER_DIR}/include")
FILE(GLOB_RECURSE SERVER_SRC_FILES "${SERVER_SRC_DIR}/*.cpp")

ADD_EXECUTABLE(server "${SERVER_SRC_FILES}")
TARGET_INCLUDE_DIRECTORIES(server PUBLIC
  "${SERVER_INC_DIR}" "${PCAP_INCLUDE_DIRS}" "${COMMON_INC_DIR}")
TARGET_LINK_LIBRARIES(server PUBLIC "${PCAP_LIBRARIES}" common)


# Client
SET(CLIENT_DIR "${CMAKE_SOURCE_DIR}/client")
SET(CLIENT_SRC_DIR "${CLIENT_DIR}/src")
SET(CLIENT_INC_DIR "${CLIENT_DIR}/include")
FILE(GLOB_RECURSE CLIENT_SRC_FILES "${CLIENT_SRC_DIR}/*.cpp")

ADD_EXECUTABLE(client "${CLIENT_SRC_FILES}")
TARGET_INCLUDE_DIRECTORIES(client PUBLIC
  "${CLIENT_INC_DIR}" "${PCAP_INCLUDE_DIRS}" "${COMMON_INC_DIR}")
TARGET_LINK_LIBRARIES(client PUBLIC "${PCAP_LIBRARIES}" common)


# C++11 features
TARGET_COMPILE_FEATURES(common PUBLIC cxx_nullptr)
TARGET_COMPILE_FEATURES(server PUBLIC cxx_nullptr)
TARGET_COMPILE_FEATURES(client PUBLIC cxx_nullptr)

TARGET_COMPILE_FEATURES(common PUBLIC cxx_auto_type)
TARGET_COMPILE_FEATURES(server PUBLIC cxx_auto_type)
TARGET_COMPILE_FEATURES(client PUBLIC cxx_auto_type)


# Add warnings
IF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU" OR
    "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
  SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wno-unused-variable -Wno-unused-parameter")
ELSEIF ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4")
ENDIF()
